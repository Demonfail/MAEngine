<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/**
 * D3D
 */
d3d_start();

rot = 0;

/**
 * Particle System
 */
index = MAE_ParticleSystemCreate();
MAE_ParticleSystemSetParticleCount(index, 8192);

tex = MAE_TextureCreate();

MAE_TextureCreateFromFile(tex, "COMMON\PARTICLE\smoke.png", MIPMAPS_NONE);
MAE_ParticleSystemSetTexture(index, tex);

/**
 * Particle Emitter
 */
MAE_ParticleEmitterCreate(index);
MAE_ParticleEmitterSetParticlePosition(index, MAE_VectorCreate(-4, -4, -4), MAE_VectorCreate(4, 4, 4));
MAE_ParticleEmitterSetParticleVelocity(index, MAE_VectorCreate(0.00, 0.1, 0.00), MAE_VectorCreate(0.00, 0.1, 0.00));
MAE_ParticleEmitterSetParticleAcceleration(index, MAE_VectorCreate(0.000, -0.0001, 0.0001));
MAE_ParticleEmitterSetParticleColour(index, 255, 255, 255, 255, 255, 127, 39, 0);
MAE_ParticleEmitterSetParticleCount(index, 2, 8);
MAE_ParticleEmitterSetParticleLife(index, 256, 512);
MAE_ParticleEmitterSetParticleSize(index, 2, 16);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI
sldrs = 0;
chkbxs = 0;
SliderDistanceFromCenter = CreateSlider(0, 16, 1);
SliderParticleCount      = CreateSlider(0, 16, 16);
SliderParticleLife       = CreateSlider(0, 16, 8);
CheckboxDrawEnable = CreateCheckbox(true);
CheckboxUpdateEnable = CreateCheckbox(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pos = UpdateSlider(SliderDistanceFromCenter);
var plife = 64*UpdateSlider(SliderParticleLife);
var pcount = UpdateSlider(SliderParticleCount);

if(UpdateCheckbox(CheckboxUpdateEnable)) {
    MAE_ParticleEmitterSetParticleCount(index, pcount/4, pcount);
    MAE_ParticleEmitterSetParticleLife(index, plife/2, plife);
    MAE_ParticleEmitterSetParticlePosition(index, MAE_VectorCreate(-pos, -pos, -pos), MAE_VectorCreate(pos, pos, pos));
    MAE_ParticleSystemUpdate(index, 1); //Spawn new particles every step. room_speed would spawn them every second.
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MAE_ParticleSystemDestroy(index);
MAE_TextureDestroy(tex);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI
draw_set_colour(c_black);
draw_text(room_width - 196, 0, "Particles: " + string(MAE_ParticleSystemGetParticleCount(index)));

DrawWindow(48, 48, 128+32, 256);
DrawSlider(64, 64+16, 128, SliderDistanceFromCenter, "Position");
DrawSlider(64, 64+48, 128, SliderParticleLife, "Life");
DrawSlider(64, 64+80, 128, SliderParticleCount, "Count");
DrawCheckbox(64+76, 64+94, CheckboxDrawEnable, "Draw");
DrawCheckbox(64+76, 64+114, CheckboxUpdateEnable, "Update");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_projection(48, 0, 48, 0, 0, 0, 0, 0, 1);

if(UpdateCheckbox(CheckboxDrawEnable) == true) {
    MAE_ParticleSystemRender(index);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
